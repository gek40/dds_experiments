//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: StdMsgsStringDcps.h
//  Source: standalone/StdMsgsStringDcps.idl
//  Generated: Mon Dec 23 17:30:37 2019
//  OpenSplice 6.9.181127OSS
//  
//******************************************************************
#ifndef _STDMSGSSTRINGDCPS_H_
#define _STDMSGSSTRINGDCPS_H_

#include "sacpp_mapping.h"
#include "dds_dcps.h"
#include "StdMsgsString.h"


class std_msgs__StringTypeSupportInterface;

typedef std_msgs__StringTypeSupportInterface * std_msgs__StringTypeSupportInterface_ptr;
typedef DDS_DCPSInterface_var < std_msgs__StringTypeSupportInterface> std_msgs__StringTypeSupportInterface_var;
typedef DDS_DCPSInterface_out < std_msgs__StringTypeSupportInterface> std_msgs__StringTypeSupportInterface_out;


class std_msgs__StringDataWriter;

typedef std_msgs__StringDataWriter * std_msgs__StringDataWriter_ptr;
typedef DDS_DCPSInterface_var < std_msgs__StringDataWriter> std_msgs__StringDataWriter_var;
typedef DDS_DCPSInterface_out < std_msgs__StringDataWriter> std_msgs__StringDataWriter_out;


class std_msgs__StringDataReader;

typedef std_msgs__StringDataReader * std_msgs__StringDataReader_ptr;
typedef DDS_DCPSInterface_var < std_msgs__StringDataReader> std_msgs__StringDataReader_var;
typedef DDS_DCPSInterface_out < std_msgs__StringDataReader> std_msgs__StringDataReader_out;


class std_msgs__StringDataReaderView;

typedef std_msgs__StringDataReaderView * std_msgs__StringDataReaderView_ptr;
typedef DDS_DCPSInterface_var < std_msgs__StringDataReaderView> std_msgs__StringDataReaderView_var;
typedef DDS_DCPSInterface_out < std_msgs__StringDataReaderView> std_msgs__StringDataReaderView_out;


struct std_msgs__StringSeq_uniq_ {};
typedef DDS_DCPSUVLSeq < std_msgs__String, struct std_msgs__StringSeq_uniq_> std_msgs__StringSeq;
typedef DDS_DCPSSequence_var < std_msgs__StringSeq> std_msgs__StringSeq_var;
typedef DDS_DCPSSequence_out < std_msgs__StringSeq> std_msgs__StringSeq_out;
class std_msgs__StringTypeSupportInterface
:
   virtual public DDS::TypeSupport
{ 
public:
   typedef std_msgs__StringTypeSupportInterface_ptr _ptr_type;
   typedef std_msgs__StringTypeSupportInterface_var _var_type;

   static std_msgs__StringTypeSupportInterface_ptr _duplicate (std_msgs__StringTypeSupportInterface_ptr obj);
   DDS::Boolean _local_is_a (const char * id);

   static std_msgs__StringTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
   static std_msgs__StringTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
   static std_msgs__StringTypeSupportInterface_ptr _nil () { return 0; }
   static const char * _local_id;
   std_msgs__StringTypeSupportInterface_ptr _this () { return this; }


protected:
   std_msgs__StringTypeSupportInterface () {};
   ~std_msgs__StringTypeSupportInterface () {};
private:
   std_msgs__StringTypeSupportInterface (const std_msgs__StringTypeSupportInterface &);
   std_msgs__StringTypeSupportInterface & operator = (const std_msgs__StringTypeSupportInterface &);
};

class std_msgs__StringDataWriter
:
   virtual public DDS::DataWriter
{ 
public:
   typedef std_msgs__StringDataWriter_ptr _ptr_type;
   typedef std_msgs__StringDataWriter_var _var_type;

   static std_msgs__StringDataWriter_ptr _duplicate (std_msgs__StringDataWriter_ptr obj);
   DDS::Boolean _local_is_a (const char * id);

   static std_msgs__StringDataWriter_ptr _narrow (DDS::Object_ptr obj);
   static std_msgs__StringDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
   static std_msgs__StringDataWriter_ptr _nil () { return 0; }
   static const char * _local_id;
   std_msgs__StringDataWriter_ptr _this () { return this; }

   virtual DDS::LongLong register_instance (const std_msgs__String& instance_data) = 0;
   virtual DDS::LongLong register_instance_w_timestamp (const std_msgs__String& instance_data, const DDS::Time_t& source_timestamp) = 0;
   virtual DDS::Long unregister_instance (const std_msgs__String& instance_data, DDS::LongLong handle) = 0;
   virtual DDS::Long unregister_instance_w_timestamp (const std_msgs__String& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
   virtual DDS::Long write (const std_msgs__String& instance_data, DDS::LongLong handle) = 0;
   virtual DDS::Long write_w_timestamp (const std_msgs__String& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
   virtual DDS::Long dispose (const std_msgs__String& instance_data, DDS::LongLong handle) = 0;
   virtual DDS::Long dispose_w_timestamp (const std_msgs__String& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
   virtual DDS::Long writedispose (const std_msgs__String& instance_data, DDS::LongLong handle) = 0;
   virtual DDS::Long writedispose_w_timestamp (const std_msgs__String& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
   virtual DDS::Long get_key_value (std_msgs__String& key_holder, DDS::LongLong handle) = 0;
   virtual DDS::LongLong lookup_instance (const std_msgs__String& instance_data) = 0;

protected:
   std_msgs__StringDataWriter () {};
   ~std_msgs__StringDataWriter () {};
private:
   std_msgs__StringDataWriter (const std_msgs__StringDataWriter &);
   std_msgs__StringDataWriter & operator = (const std_msgs__StringDataWriter &);
};

class std_msgs__StringDataReader
:
   virtual public DDS::DataReader
{ 
public:
   typedef std_msgs__StringDataReader_ptr _ptr_type;
   typedef std_msgs__StringDataReader_var _var_type;

   static std_msgs__StringDataReader_ptr _duplicate (std_msgs__StringDataReader_ptr obj);
   DDS::Boolean _local_is_a (const char * id);

   static std_msgs__StringDataReader_ptr _narrow (DDS::Object_ptr obj);
   static std_msgs__StringDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
   static std_msgs__StringDataReader_ptr _nil () { return 0; }
   static const char * _local_id;
   std_msgs__StringDataReader_ptr _this () { return this; }

   virtual DDS::Long read (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
   virtual DDS::Long take (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
   virtual DDS::Long read_w_condition (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::Long take_w_condition (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::Long read_next_sample (std_msgs__String& received_data, DDS::SampleInfo& sample_info) = 0;
   virtual DDS::Long take_next_sample (std_msgs__String& received_data, DDS::SampleInfo& sample_info) = 0;
   virtual DDS::Long read_instance (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
   virtual DDS::Long take_instance (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
   virtual DDS::Long read_next_instance (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
   virtual DDS::Long take_next_instance (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
   virtual DDS::Long read_next_instance_w_condition (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::Long take_next_instance_w_condition (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::Long return_loan (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
   virtual DDS::Long get_key_value (std_msgs__String& key_holder, DDS::LongLong handle) = 0;
   virtual DDS::LongLong lookup_instance (const std_msgs__String& instance) = 0;

protected:
   std_msgs__StringDataReader () {};
   ~std_msgs__StringDataReader () {};
private:
   std_msgs__StringDataReader (const std_msgs__StringDataReader &);
   std_msgs__StringDataReader & operator = (const std_msgs__StringDataReader &);
};

class std_msgs__StringDataReaderView
:
   virtual public DDS::DataReaderView
{ 
public:
   typedef std_msgs__StringDataReaderView_ptr _ptr_type;
   typedef std_msgs__StringDataReaderView_var _var_type;

   static std_msgs__StringDataReaderView_ptr _duplicate (std_msgs__StringDataReaderView_ptr obj);
   DDS::Boolean _local_is_a (const char * id);

   static std_msgs__StringDataReaderView_ptr _narrow (DDS::Object_ptr obj);
   static std_msgs__StringDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
   static std_msgs__StringDataReaderView_ptr _nil () { return 0; }
   static const char * _local_id;
   std_msgs__StringDataReaderView_ptr _this () { return this; }

   virtual DDS::Long read (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
   virtual DDS::Long take (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
   virtual DDS::Long read_w_condition (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::Long take_w_condition (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::Long read_next_sample (std_msgs__String& received_data, DDS::SampleInfo& sample_info) = 0;
   virtual DDS::Long take_next_sample (std_msgs__String& received_data, DDS::SampleInfo& sample_info) = 0;
   virtual DDS::Long read_instance (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
   virtual DDS::Long take_instance (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
   virtual DDS::Long read_next_instance (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
   virtual DDS::Long take_next_instance (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
   virtual DDS::Long read_next_instance_w_condition (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::Long take_next_instance_w_condition (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::Long return_loan (std_msgs__StringSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
   virtual DDS::Long get_key_value (std_msgs__String& key_holder, DDS::LongLong handle) = 0;
   virtual DDS::LongLong lookup_instance (const std_msgs__String& instance) = 0;

protected:
   std_msgs__StringDataReaderView () {};
   ~std_msgs__StringDataReaderView () {};
private:
   std_msgs__StringDataReaderView (const std_msgs__StringDataReaderView &);
   std_msgs__StringDataReaderView & operator = (const std_msgs__StringDataReaderView &);
};





#endif
