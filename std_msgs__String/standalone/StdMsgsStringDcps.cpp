//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: StdMsgsStringDcps.cpp
//  Source: standalone/StdMsgsStringDcps.idl
//  Generated: Mon Dec 23 17:30:37 2019
//  OpenSplice 6.9.181127OSS
//  
//******************************************************************

#include "StdMsgsStringDcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUVLSeq < std_msgs__String, struct std_msgs__StringSeq_uniq_>;
#endif

const char * std_msgs__StringTypeSupportInterface::_local_id = "IDL:std_msgs__StringTypeSupportInterface:1.0";

std_msgs__StringTypeSupportInterface_ptr std_msgs__StringTypeSupportInterface::_duplicate (std_msgs__StringTypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean std_msgs__StringTypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, std_msgs__StringTypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

std_msgs__StringTypeSupportInterface_ptr std_msgs__StringTypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   std_msgs__StringTypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (std_msgs__StringTypeSupportInterface::_local_id))
   {
      result = dynamic_cast < std_msgs__StringTypeSupportInterface_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

std_msgs__StringTypeSupportInterface_ptr std_msgs__StringTypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   std_msgs__StringTypeSupportInterface_ptr result;
   result = dynamic_cast < std_msgs__StringTypeSupportInterface_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * std_msgs__StringDataWriter::_local_id = "IDL:std_msgs__StringDataWriter:1.0";

std_msgs__StringDataWriter_ptr std_msgs__StringDataWriter::_duplicate (std_msgs__StringDataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean std_msgs__StringDataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, std_msgs__StringDataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

std_msgs__StringDataWriter_ptr std_msgs__StringDataWriter::_narrow (DDS::Object_ptr p)
{
   std_msgs__StringDataWriter_ptr result = NULL;
   if (p && p->_is_a (std_msgs__StringDataWriter::_local_id))
   {
      result = dynamic_cast < std_msgs__StringDataWriter_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

std_msgs__StringDataWriter_ptr std_msgs__StringDataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   std_msgs__StringDataWriter_ptr result;
   result = dynamic_cast < std_msgs__StringDataWriter_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * std_msgs__StringDataReader::_local_id = "IDL:std_msgs__StringDataReader:1.0";

std_msgs__StringDataReader_ptr std_msgs__StringDataReader::_duplicate (std_msgs__StringDataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean std_msgs__StringDataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, std_msgs__StringDataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

std_msgs__StringDataReader_ptr std_msgs__StringDataReader::_narrow (DDS::Object_ptr p)
{
   std_msgs__StringDataReader_ptr result = NULL;
   if (p && p->_is_a (std_msgs__StringDataReader::_local_id))
   {
      result = dynamic_cast < std_msgs__StringDataReader_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

std_msgs__StringDataReader_ptr std_msgs__StringDataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   std_msgs__StringDataReader_ptr result;
   result = dynamic_cast < std_msgs__StringDataReader_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * std_msgs__StringDataReaderView::_local_id = "IDL:std_msgs__StringDataReaderView:1.0";

std_msgs__StringDataReaderView_ptr std_msgs__StringDataReaderView::_duplicate (std_msgs__StringDataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean std_msgs__StringDataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, std_msgs__StringDataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

std_msgs__StringDataReaderView_ptr std_msgs__StringDataReaderView::_narrow (DDS::Object_ptr p)
{
   std_msgs__StringDataReaderView_ptr result = NULL;
   if (p && p->_is_a (std_msgs__StringDataReaderView::_local_id))
   {
      result = dynamic_cast < std_msgs__StringDataReaderView_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

std_msgs__StringDataReaderView_ptr std_msgs__StringDataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   std_msgs__StringDataReaderView_ptr result;
   result = dynamic_cast < std_msgs__StringDataReaderView_ptr> (p);
   if (result) result->m_count++;
   return result;
}



